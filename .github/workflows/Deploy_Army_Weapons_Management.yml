name: Deploy Army Weapons Management

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    # Manual trigger

jobs:
  validate:
    name: Validate HTML and CSS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: |
          npm install -g html-validate stylelint stylelint-config-standard

      - name: Validate HTML
        run: find . -name "*.html" -exec html-validate {} \;

      - name: Validate CSS
        run: stylelint "**/*.css" || true

  lint:
    name: Lint JavaScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install ESLint
        run: npm install -g eslint

      - name: Lint JavaScript
        run: eslint "**/*.js" --no-eslintrc --env browser --parser-options=ecmaVersion:2021 || true

  test-links:
    name: Check Internal Links
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install link checker
        run: npm install -g broken-link-checker

      - name: Setup local server
        run: |
          npm install -g http-server
          http-server -p 8080 &
          sleep 5

      - name: Check internal links
        run: blc http://localhost:8080/Dashboard.html -ro --exclude 'https://cdn.tailwindcss.com'

  deploy:
    name: Deploy to GitHub Pages
    needs: [validate, lint, test-links]
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm install -g minify

      - name: Optimize HTML files
        run: |
          mkdir -p dist
          find . -name "*.html" -exec sh -c 'minify "$1" > "dist/$(basename "$1")"' _ {} \;

      - name: Copy all necessary files
        run: cp -r * dist/

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist
          branch: gh-pages

  notification:
    name: Send Deployment Notification
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }}
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Army Weapons Management System deployment completed :rocket:'
          SLACK_TITLE: Deployment Status
          SLACK_USERNAME: GitHub Actions
        if: env.SLACK_WEBHOOK != null
        continue-on-error: true

      - name: Create deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "* Army Weapons Management System deployed successfully!" >> $GITHUB_STEP_SUMMARY
          echo "* Deployment triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "* Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "* Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
